// Code generated by entc, DO NOT EDIT.

package db

import (
	"context"

	"github.com/AlecAivazis/jeeves/db/bankitem"
	"github.com/facebookincubator/ent/dialect/sql"
)

// BankItemCreate is the builder for creating a BankItem entity.
type BankItemCreate struct {
	config
}

// Save creates the BankItem in the database.
func (bic *BankItemCreate) Save(ctx context.Context) (*BankItem, error) {
	return bic.sqlSave(ctx)
}

// SaveX calls Save and panics if Save returns an error.
func (bic *BankItemCreate) SaveX(ctx context.Context) *BankItem {
	v, err := bic.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

func (bic *BankItemCreate) sqlSave(ctx context.Context) (*BankItem, error) {
	var (
		builder = sql.Dialect(bic.driver.Dialect())
		bi      = &BankItem{config: bic.config}
	)
	tx, err := bic.driver.Tx(ctx)
	if err != nil {
		return nil, err
	}
	insert := builder.Insert(bankitem.Table).Default()
	id, err := insertLastID(ctx, tx, insert.Returning(bankitem.FieldID))
	if err != nil {
		return nil, rollback(tx, err)
	}
	bi.ID = int(id)
	if err := tx.Commit(); err != nil {
		return nil, err
	}
	return bi, nil
}
