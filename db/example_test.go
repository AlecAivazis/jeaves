// Code generated by entc, DO NOT EDIT.

package db

import (
	"context"
	"log"

	"github.com/facebookincubator/ent/dialect/sql"
)

// dsn for the database. In order to run the tests locally, run the following command:
//
//	 DB_INTEGRATION_ENDPOINT="root:pass@tcp(localhost:3306)/test?parseTime=True" go test -v
//
var dsn string

func ExampleBankItem() {
	if dsn == "" {
		return
	}
	ctx := context.Background()
	drv, err := sql.Open("mysql", dsn)
	if err != nil {
		log.Fatalf("failed creating database client: %v", err)
	}
	defer drv.Close()
	client := NewClient(Driver(drv))
	// creating vertices for the bankitem's edges.

	// create bankitem vertex with its edges.
	bi := client.BankItem.
		Create().
		SetItemID("string").
		SetQuantity(1).
		SaveX(ctx)
	log.Println("bankitem created:", bi)

	// query edges.

	// Output:
}
func ExampleGuild() {
	if dsn == "" {
		return
	}
	ctx := context.Background()
	drv, err := sql.Open("mysql", dsn)
	if err != nil {
		log.Fatalf("failed creating database client: %v", err)
	}
	defer drv.Close()
	client := NewClient(Driver(drv))
	// creating vertices for the guild's edges.
	gc0 := client.GuildChannel.
		Create().
		SetChannel("string").
		SetRole("string").
		SaveX(ctx)
	log.Println("guildchannel created:", gc0)
	bi1 := client.BankItem.
		Create().
		SetItemID("string").
		SetQuantity(1).
		SaveX(ctx)
	log.Println("bankitem created:", bi1)

	// create guild vertex with its edges.
	gu := client.Guild.
		Create().
		SetDiscordID("string").
		AddChannels(gc0).
		AddBank(bi1).
		SaveX(ctx)
	log.Println("guild created:", gu)

	// query edges.
	gc0, err = gu.QueryChannels().First(ctx)
	if err != nil {
		log.Fatalf("failed querying channels: %v", err)
	}
	log.Println("channels found:", gc0)

	bi1, err = gu.QueryBank().First(ctx)
	if err != nil {
		log.Fatalf("failed querying bank: %v", err)
	}
	log.Println("bank found:", bi1)

	// Output:
}
func ExampleGuildChannel() {
	if dsn == "" {
		return
	}
	ctx := context.Background()
	drv, err := sql.Open("mysql", dsn)
	if err != nil {
		log.Fatalf("failed creating database client: %v", err)
	}
	defer drv.Close()
	client := NewClient(Driver(drv))
	// creating vertices for the guildchannel's edges.

	// create guildchannel vertex with its edges.
	gc := client.GuildChannel.
		Create().
		SetChannel("string").
		SetRole("string").
		SaveX(ctx)
	log.Println("guildchannel created:", gc)

	// query edges.

	// Output:
}
